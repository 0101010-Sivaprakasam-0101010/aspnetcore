<Project>

  <!-- Require rebuild if the targets change -->
  <PropertyGroup>
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
  </PropertyGroup>

  <PropertyGroup>
    <BlazorToolsDir Condition="'$(BlazorToolsDir)' == ''">$(MSBuildThisFileDirectory)..\tools\</BlazorToolsDir>
    <_BlazorTasksTFM Condition=" '$(MSBuildRuntimeType)' == 'Core'">netcoreapp</_BlazorTasksTFM>
    <_BlazorTasksTFM Condition=" '$(_BlazorTasksTFM)' == ''">netfx</_BlazorTasksTFM>
    <BlazorTasksPath>$(BlazorToolsDir)$(_BlazorTasksTFM)\Microsoft.AspNetCore.Blazor.Build.Tasks.dll</BlazorTasksPath>

    <!-- The Blazor build code can only find your referenced assemblies if they are in the output directory -->
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
  </PropertyGroup>

  <Import Project="Blazor.MonoRuntime.targets" />
  <Import Project="Publish.targets" />

  <Target Name="GenerateBlazorMetadataFile"
    BeforeTargets="GetCopyToOutputDirectoryItems">
    <PropertyGroup>
      <BlazorMetadataFileName>$(AssemblyName).blazor.config</BlazorMetadataFileName>
      <BlazorMetadataFilePath>$(TargetDir)$(BlazorMetadataFileName)</BlazorMetadataFilePath>
    </PropertyGroup>

    <ItemGroup>
      <_BlazorConfigContent Include="$(MSBuildProjectFullPath)" />
      <_BlazorConfigContent Include="$(TargetPath)" />
      <_BlazorConfigContent Include="debug:true" Condition="'$(BlazorEnableDebugging)'=='true'" />
    </ItemGroup>

    <WriteLinesToFile
      File="$(BlazorMetadataFilePath)"
      Lines="@(_BlazorConfigContent)"
      Overwrite="true"
      WriteOnlyWhenDifferent="True" />

    <ItemGroup>
      <ContentWithTargetPath Include="$(BlazorMetadataFilePath)" TargetPath="$(BlazorMetadataFileName)" CopyToOutputDirectory="PreserveNewest" />
    </ItemGroup>
  </Target>

  <PropertyGroup>
    <GetCurrentProjectStaticWebAssetsDependsOn>
      $(GetCurrentProjectStaticWebAssetsDependsOn);
      _ClearCurrentStaticWebAssetsForReferenceDiscovery
    </GetCurrentProjectStaticWebAssetsDependsOn>
  </PropertyGroup>

  <Target Name="_ClearCurrentStaticWebAssetsForReferenceDiscovery">
    <ItemGroup>
      <StaticWebAsset Remove="@(StaticWebAsset)" Condition="'%(SourceType)' == ''" />
    </ItemGroup>
  </Target>

</Project>
